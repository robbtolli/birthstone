
CODE        ->		BLOCK CODE | IF_COND CODE| LOOP CODE | DEF_FUNC CODE | STMT CODE | e



IF_COND		->		if ( ASGNMT ) BLOCK ELIF_COND ELSE_COND | IF_COND ( ASGNMT ) STMT ELIF
COND_ELIF   ->		elif ( ASGNMT ) BLOCK ELIF_COND | IF_COND ( ASGNMT ) STMT ELIF_COND | e
ELSE_COND   ->		else BLOCK | else STMT | e


LOOP		   ->		WLOOP | DLOOP | FLOOP
WLOOP	   	->		while ( COMP ) BLOCK | while ( COMP ) STMT
DLOOP			->		do BLOCK while ( COMP ) ; | do STMT while ( COMP ) ;
FLOOP			->		for ( ASGNMT ; COMP; EXPR ) BLOCK | for ( ASGNMT ; COMP; EXPR ) STMT

IO_STMT		->		print STMT | read STMT



BLOCK   		->    { CODE }
STMT    		->		ASGNMT ;
ASGNMT		->		ORX ASGNMT2
ASGNMT2		->		OP5 ORX | e
ORX			->		ANDX ORX2
ORX2			->		OP4 ASGMNT | e
ANDX			->		COMP ANDX2
ANDX2			->		OP3 ASGMNT | e
COMP			->    EXPR COMP2
COMP2			->		OP2 ASGMNT | e 
EXPR     	->    TERM EXPR2
EXPR2			->		+ ASGMNT | - ASGMNT | e
TERM     	->    FACTOR TERM2
TERM2			->		OP0 ASGMNT | e
FACTOR   	->    str | t | f | num | id | '(' ASGMNT ')'

OP0			->		* | /
OP1			->		+ | -
OP2			->		< | <= | == | != | >= | >
OP3			->		&&
OP4			->  	||
OP5			->		= | := | +=

